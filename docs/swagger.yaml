basePath: /api/v1
definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  github_com_spanwalla_song-library_internal_entity.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      name:
        type: string
      releaseDate:
        type: string
    type: object
  internal_controller_http_v1.songRoutes:
    type: object
host: localhost:8080
info:
  contact: {}
  title: Song Library
  version: "1.0"
paths:
  /songs:
    get:
      description: Search songs with filters
      parameters:
      - description: 'Example: &filter[name]=Song&filter[group]=Muse'
        in: query
        name: filter[<name>]
        type: string
      - description: 'Example: &order_by=name:asc,link:desc,group. Default: asc'
        in: query
        name: order_by
        type: string
      - description: Offset, default 0
        in: query
        name: offset
        type: integer
      - description: Limit, default 5
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_spanwalla_song-library_internal_entity.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Search songs
    post:
      consumes:
      - application/json
      description: Add new song
      parameters:
      - description: Song name
        in: body
        name: song
        required: true
        schema:
          type: string
      - description: Group name
        in: body
        name: group
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_controller_http_v1.songRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Add new song
  /songs/{id}:
    delete:
      description: Delete song by id
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller_http_v1.songRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete song
    get:
      description: Get song by id
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_spanwalla_song-library_internal_entity.Song'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get song by id
    patch:
      consumes:
      - application/json
      description: Edit song by id
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Song name
        in: body
        name: song
        schema:
          type: string
      - description: Group name
        in: body
        name: group
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller_http_v1.songRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Edit song
  /songs/{id}/text:
    get:
      description: Get song text with pagination by couplets
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Offset, default 0
        in: query
        name: offset
        type: integer
      - description: Limit, default 5
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller_http_v1.songRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get song text
swagger: "2.0"
